(texmacs-module (git-utils))

(tm-define (buffer-status name)
           (let* ((name-s (url->string name))
                  (cmd (string-append "git status -s " name-s))
                  (ret (eval-system cmd)))
             ;; (display ret)
             ;; FIXME: why it works for colored text without any handling
             (cond ((string-starts? ret "A ") "A ")
                   ((string-starts? ret "??") "??")
                   ((string-starts? ret " M") " M")
                   ((string-starts? ret "M ") "M ")
                   ((string-starts? ret "MM") "MM")
                   ((string-starts? ret "AM") "AM")
                   (else "others"))))

(tm-define (buffer-staged? name)
           (with ret (buffer-status name)
                 (or (== ret "A ")
                     (== ret "M ")
                     (== ret "MM")
                     (== ret "AM"))))

(tm-define (buffer-unstaged? name)
           (with ret (buffer-status name)
                 (or (== ret "??")
                     (== ret " M")
                     (== ret "MM")
                     (== ret "AM"))))

(tm-define (buffer-histed? name)
           (with ret (buffer-status name)
                 (or (== ret "M ")
                     (== ret "MM")
                     (== ret " M")
                     (== ret "others"))))

(tm-define (git-status)
           (let* ((cmd "git status")
                  (ret (eval-system cmd)))
             (string-split ret #\nl)))

(tm-define (git-log)
           (let* ((cmd "git log --pretty=%ai\"|\"%an\"|\"%s\"|\"%h")
                  (ret (eval-system cmd)))
             (string-split ret #\nl)))

(tm-define (git-commit message)
           (let* ((cmd (string-append "git commit -m \"" message "\""))
                  (ret (eval-system cmd)))
             ;; (display ret)
             (set-message "git commit" message))
           (git-show-status))

(tm-define (buffer-log name)
           (let* ((name-s (url->string name))
                  (cmd (string-append "git log --pretty=%ai\"|\"%an\"|\"%s\"|\"%h " name-s))
                  (ret (eval-system cmd)))
             (string-split ret #\nl)))
